<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

class codingup2023 extends Controller
{
    public function index(Request $request){

        $this->C23_Sudokteur();
        //$this->C23_NomsEspeces();

        dd('2023');
    }

    //https://pydefis.callicode.fr/defis/C23_Sudokteur/txt
    private function C23_Sudokteur(){
        /*$gridTest = [
            '0641554077',
            '1692009693',
            '9807193933',
            '8645766875',
            '655213759.',
            '34.3390204',
            '09.4424083',
            '7415492888',
            '81726.2771',
            '561..18251'
        ];*/

        $gridTest = [
            '33137144630075183214157445891848757344895232228874',
            '10403835.95403810400112557580350652984248919733804',
            '61237660224471762207237533269439127062556260159773',
            '28017589609817284.35555629248848788074597839372927',
            '54948731451811598218933785739035104285318454710598',
            '54536488499538272556033972083167584046564048016295',
            '62309283885398828808663303640426257467888882984700',
            '20825305049959686569058830325303251444117193406269',
            '84814945704982088374767339347446933002870783316924',
            '4402420439278558485682631.263399547950040351780085',
            '52473399012442719222466109421305362257154992114018',
            '7964608017321945179532076446774332230464.465341646',
            '01165172752064685966481505328228045804507207816237',
            '747896.0936060621246523499153323868406931669719109',
            '98980412175749188355206138626339986249690170802051',
            '56433268449594814323814876282847149862212276346042',
            '62972050800483868560790317689210209680981841947875',
            '75343067961501332546774089585945774818557338799567',
            '19296583357705209815914367387046202626891450755512',
            '09891283020614088907705067337191821764723823531908',
            '32636675976059782800332461646446036676020820097604',
            '91041516157815949633634689441587448919020026471947',
            '38955041987224092389907519864411145851271325503476',
            '76974100774552059112019312934269424485956160523905',
            '40276921985081326764493531176579221946768243163139',
            '67487804608776621849968160992208398535008839934652',
            '55501812340452054678626704506354665413740294240523',
            '68860321050666189880733205543134829597936266368659',
            '04786956879230357081049590570254761549425249566171',
            '47665241445505867011542729796996577007358711112345',
            '.4718638237535765838096829977859727947266164170420',
            '88157735574175779991566831331690538593913577467594',
            '47111618609996972328046030451493859234118839172015',
            '36980604561789406172036857864697102090399905754632',
            '47985763880128881382148777171981717311925748204762',
            '00010514905329271296100325951018536744356355837874',
            '62748963259418832509956076476691355897423.82882243',
            '68305652599679099729059362857249203379423860336877',
            '34910018076010527452030741285956074447258199656559',
            '84999381668259396800042502810340351601167803815033',
            '13545599745481542738771008573917802847116749482003',
            '16136878137157431479083.23261278478679193537166013',
            '9277.924568170080433996319195162614329323963310124',
            '7423048842085174315320081436250224522324575.561033',
            '75969003014253173400858157801831539176349809824690',
            '20173583989360308135874149660595949644561905792905',
            '55738222167022407299172813371315971267960272411525',
            '63162646463133195629142172012167819820977777113622',
            '10916763591630731968822799488051050369122799577866',
            '22379111525643160269867745417382662132241287983563'
        ];

        $max = 0;
        $result = [];
        $point = 0;
        foreach( $gridTest as $line ){
            for( $i=0; $i < strlen($line); $i++ ){
                
                if( $line[$i] == '.'){
                    $point++;
                    continue;
                }
                $result[$line[$i]] = array_key_exists( $line[$i], $result)? $result[$line[$i]] +1: 1;

                if( $result[$line[$i]] > $max ){
                    $max = $result[$line[$i]];
                }
            }
        }

        $value = "";
        ksort( $result );
        foreach( $result as $key => $number ){
            if( $number == $max ){
                continue;
            } 
            for( $y = $number; $y < $max; $y++ ){
                $value = $value . $key;
            }
        }
        dump( $max );
        dump( $point, $result );
        dump( $value, strlen( $value ) );
    }

    // https://pydefis.callicode.fr/defis/C23_NomsEspeces/txt
    private function C23_NomsEspeces(){
        $names = [
            "Adiposes",
            "Anges Pleureurs",
            "Atraxis",
            "Axos",
            "Baleines stellaires",
            "Boekinds",
            "Cerebravores",
            "Cybermen",
            "Daleks",
            "Foret de Cheem",
            "Gelths",
            "Guerriers de glace",
            "Haths",
            "Hemovariformes",
            "Hoix",
            "Humains",
            "Judoons",
            "Krafayis",
            "Conscience Nestene",
            "Oods",
            "Pranavores",
            "Pyroviles",
            "Racnoss",
            "Robomen",
            "Sangsues rouges",
            "Saturnyniens",
            "Siluriens",
            "Sontariens",
            "Seigneurs du Temps",
            "Sycorax",
            "Thals",
            "Toclafanes",
            "Vostoks",
            "Whisper Man",
            "Zygons",
        ];

        /*$names = [
            "Oods", "Daleks", "Guerriers de glace"
        ];*/

        $names_order = [];
        foreach( $names as $name ){
            //dump( $name );

            $temp = [];
            $charCount = 0;
            for( $i=0; $i < strlen($name); $i++ ){
                $char = strtolower( trim( $name[$i] ) );
                if( $char ){
                    $temp[$char] = 1;
                    $charCount++;
                }
            }

            $names_order[] = [
                "name" => $name,
                "order" => (count( $temp ) / $charCount ),
            ];
        }
        usort($names_order, function($a, $b) {
            return $a['order'] <=> $b['order'];
        });
        $names_order = array_slice($names_order, 0, 10, true );
        dump( $names_order );
        $list = [];
        foreach( $names_order as $name ){
            $list[] = $name['name'];
        }
        dump( implode(',', $list) );
    }

}
